----------------------------------------------------------------------------------------------------------------------
|   //price filter not working //image sliding not working //rating search                                                       | 
----------------------------------------------------------------------------------------------------------------------

category=mobile phones


--------------------------------------------------------------------------
|                             BACKEND                                    | 
--------------------------------------------------------------------------
authorize user roles,
logout setting, 
user id show in product page, (or) adding user in product schema
generate reset password token
forget password api with email
reset password API
error handling user API services
Get User Profile
change password
profile update
admin routes
create order model
create new order
create single order
get logged user orders
get all orders
update order / update status
product review api services ->create,update,delete review api
create review
get review
delete review

--------------------------------------------------------------------------
|                             FRENTEND                                   | 
--------------------------------------------------------------------------
create react app & setup
header & footer
React Router Setup
custom title using React Helment Async
//using redux 
redux setup
create store 
create product  reducer
creating products actions
product listing with redux state



 creating single product reducer

 search products by keywords,by category,by pricing, by rating
 react js pagination
 search products
 category search
 rating search

 login reducer and action   

 creating login component reducer & action

creating register component ,reducer & action











import React, { useEffect, useState } from "react";
import {useDispatch, useSelector} from  "react-redux";
import {register,clearAuthError} from "../actions/userActions";
import { toast } from "react-toastify";
import {useNavigate} from "react-router-dom"
import Loading from "../Layouts/loading/Loading";


const Register = () => {
const [name,setName]=useState("");
  const [password,setPassword]=useState("")
  const [email,setEmail]=useState("")
  const [avatar,setAvatar]=useState();
  const [avatarPreview,setAvatarPreview]=useState("/images/kakhasiHatake.jpg");
  console.log(name,email,password);//avatar
  

// const [userData,setUserData]=useState({
//    name :"",
//    email :"",
//    password:"",
// });
// console.log(userData)
const dispatch = useDispatch()
const navigate = useNavigate()
const redirect = location.search?'/'+location.search.split('=')[1] : '/';
const {loading,error,isAuthenticated} = useSelector(state=>state.authState)
// const [image,setImage]=useState("");  


    const onChange=(event)=>{
      
      if(event.target.name == "avatar"){
        const reader = new FileReader;
        reader.onload = ()=>{
          if(reader.readyState === 2){
            setAvatarPreview(reader.result)
            
            setAvatar(event.target.files[0])
          }
        }

        reader.readAsDataURL(event.target.files[0])
      }
     event.preventDefault()
    //   else{
    //     setUserData(...userData,{[event.target.name]:event.target.value})
    //   }
      
    }
    let handleSubmit=(event)=>{
      event.preventDefault();
      dispatch(register(name,email,password,avatar))//,avatar
      const formData = new FormData();
      // formData.append('name',userData.name);
      // formData.append('email',userData.email);
      // formData.append('password',userData.password);
      formData.append('avatar',avatar)
      dispatch(register(formData))
      // console.log(formData);
  }
      
  
      
    
    useEffect(()=>{
      if(isAuthenticated){
         navigate(redirect)
         return
      }
      if(error){
            
               toast(error,{
                position:"bottom-center",
                autoClose:3000,
                type:"error",
                onOpen:()=>{dispatch(clearAuthError())}
      
                // hideProgressBar: false, // progress bar visible
                  // closeOnClick: true, // click panna close aagum
                  // pauseOnHover: true, // mouse over panna stop aagum
                  // draggable: true, // drag pannalam
                  // theme: "red", // style (light/dark/colored)
               }
      
              )
               return; 
      
              }
    },[error,isAuthenticated,dispatch])
    
  
  return (
    <div className="container container-fluid">
        <div className="row wrapper">
		<div className="col-10 col-lg-5">
        <form onSubmit={handleSubmit} className="shadow-lg" encType='multipart/form-data'>
            <h1 className="mb-3">Register</h1>

          <div className="form-group">
            <label htmlFor="email_field">Name</label>
            <input type="name" id="name_field" className="form-control" 
            name="name"
            value={name} 
            onChange={e=>setName(e.target.value)}
            />
          </div>

            <div className="form-group">
              <label htmlFor="email_field">Email</label>
              <input
                type="email"
                id="email_field"
                className="form-control"
                name="email"
                value={email}
                onChange={e=>setEmail(e.target.value)}
              />
            </div>
  
            <div className="form-group">
              <label htmlFor="password_field">Password</label>
              <input
                type="password"
                id="password_field"
                className="form-control"
                name="password"
                value={password}
                onChange={e=>setPassword(e.target.value)}
              />
            </div>

            <div className='form-group'>
              <label htmlFor='avatar_upload'>Avatar</label>
              <div className='d-flex align-items-center'>
                  <div>
                      <figure className='avatar mr-3 item-rtl'>
                          <img
                              src={avatarPreview}
                              className='rounded-circle'
                              alt='image'
                          />
                      </figure>
                  </div>
                  <div className='custom-file'>
                      <input
                          type='file'
                          name='avatar'
                          className='custom-file-input'
                          id='customFile'
                          value={avatarPreview}
                          onChange={onChange}
                          // value={image}
                          // onChange={e=>setImage(e.target.value)}
                      />
                      <label className='custom-file-label' htmlFor='customFile'>
                          Choose Avatar
                      </label>
                  </div>
              </div>
          </div> 
  
            <button
              id="register_button"
              type="submit"
              className="btn btn-block py-3"
              disabled={loading}
            >
              {loading ? <Loading/> : 'Register'}
            </button>
          </form>
		  </div>
    </div>
</div>
  )
  
}
export default Register






















import React, { useEffect, useState } from "react";
import {useDispatch, useSelector} from  "react-redux";
import {register,clearAuthError} from "../actions/userActions";
import { toast } from "react-toastify";
import {useNavigate} from "react-router-dom"

const Register = () => {

const [userData,setUserData]=useState({
   name :"",
   email :"",
   password:"",
});
const [avatar,setAvatar]=useState("");
const [avatarPreview,setAvatarPreview]=useState("/images/kakhasiHatake.jpg");
const dispatch = useDispatch()
const navigate = useNavigate()
const redirect = location.search?'/'+location.search.split('=')[1] : '/';
const {loading,error,isAuthenticated} = useSelector(state=>state.authState)
// const [image,setImage]=useState("");  


    const onChange=(event)=>{
      
      if(event.target.name == "avatar"){
        const reader = new FileReader;
        reader.onload = ()=>{
          if(reader.readyState === 2){
            setAvatarPreview(reader.result)
            setAvatar(event.target.files[0])
          }
        }

        reader.readAsDataURL(event.target.files[0])
      }
      // event.preventDefault()
      else{
        setUserData({...userData,[event.target.name]:event.target.value})
      }
    }
    const handleSubmit=(event)=>{
      event.preventDefault();
      const formData = new FormData();
      formData.append('name',userData.name);
      formData.append('email',userData.email);
      formData.append('password',userData.password);
      formData.append('avatar',avatar)
      dispatch(register(formData))
    }
    useEffect(()=>{
      if(isAuthenticated){
         navigate(redirect)
         return
      }
      if(error){
            
               toast(error,{
                position:"bottom-center",
                autoClose:3000,
                type:"error",
                onOpen:()=>{dispatch(clearAuthError())}
      
                // hideProgressBar: false, // progress bar visible
                  // closeOnClick: true, // click panna close aagum
                  // pauseOnHover: true, // mouse over panna stop aagum
                  // draggable: true, // drag pannalam
                  // theme: "red", // style (light/dark/colored)
               }
      
              )
               return; 
      
              }
    },[error,isAuthenticated])
  return (
    <div className="container container-fluid">
        <div className="row wrapper">
		<div className="col-10 col-lg-5">
        <form onSubmit={handleSubmit} className="shadow-lg" encType='multipart/form-data'>
            <h1 className="mb-3">Register</h1>

          <div className="form-group">
            <label htmlFor="email_field">Name</label>
            <input type="name" id="name_field" className="form-control" 
            name="name"
            onChange={onChange}
            value={userData.name}
            />
          </div>

            <div className="form-group">
              <label htmlFor="email_field">Email</label>
              <input
                type="email"
                id="email_field"
                className="form-control"
                name="email"
                onChange={onchange}
                value={userData.email}
              />
            </div>
  
            <div className="form-group">
              <label htmlFor="password_field">Password</label>
              <input
                type="password"
                id="password_field"
                className="form-control"
                name="password"
                onChange={onchange}
                value={userData.password}
              />
            </div>

            <div className='form-group'>
              <label htmlFor='avatar_upload'>Avatar</label>
              <div className='d-flex align-items-center'>
                  <div>
                      <figure className='avatar mr-3 item-rtl'>
                          <img
                              src={avatarPreview}
                              className='rounded-circle'
                              alt='image'
                          />
                      </figure>
                  </div>
                  <div className='custom-file'>
                      <input
                          type='file'
                          name='avatar'
                          className='custom-file-input'
                          id='customFile'
                          onChange={onChange}
                          // value={image}
                          // onChange={e=>setImage(e.target.value)}
                      />
                      <label className='custom-file-label' htmlFor='customFile'>
                          Choose Avatar
                      </label>
                  </div>
              </div>
          </div>
  
            <button
              id="register_button"
              type="submit"
              className="btn btn-block py-3"
              disabled={loading}
            >
              {loading ? 'Registering...' : 'Register'}
            </button>
          </form>
		  </div>
    </div>
</div>
  );
};

export default Register;

